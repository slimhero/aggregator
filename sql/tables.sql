CREATE TABLE STATE(
      ID INTEGER NOT NULL PRIMARY KEY,
			CONST INTEGER NOT NULL UNIQUE,
      CODE TEXT NOT NULL,
			DESC DESCRIPTION
		);
    INSERT INTO STATE( CODE, CONST )
		VALUES( "NEW", 1 );
    INSERT INTO STATE( CODE, CONST )
		VALUES( "ACTIVE", 2 );
		INSERT INTO STATE( CODE, CONST )
		VALUES( "DELETED", 3 );

	  CREATE TABLE FIELDTYPE(
			ID INTEGER NOT NULL PRIMARY KEY,
      NAME TEXT UNIQUE,
			VALUE TEXT
		);
    INSERT INTO FIELDTYPE( NAME, VALUE )
		VALUES( "NUMBER", "STORENUM" );
    INSERT INTO FIELDTYPE( NAME, VALUE )
		VALUES( "TEXT", "STORETEXT" );
    INSERT INTO FIELDTYPE( NAME, VALUE )
		VALUES( "DATE", "STOREDATE" );

		CREATE TABLE FIELDS(
			ID INTEGER NOT NULL PRIMARY KEY,
      CODE TEXT NOT NULL UNIQUE,
			FIELDNAME TEXT NOT NULL UNIQUE,
      FIELDTYPE INTEGER,
			VISIBLE INTEGER,
			ORDERNUM INTEGER NOT NULL,
			STATE INTEGER,
      ISSYSTEM INTEGER DEFAULT 0,
			FOREIGN KEY( FIELDTYPE ) REFERENCES FIELDTYPE(ID),
			FOREIGN KEY( STATE ) REFERENCES STATE(ID)
		);

    -- SYSTEM
    -- ID
    INSERT INTO FIELDS(CODE,FIELDNAME,FIELDTYPE,VISIBLE,ORDERNUM,STATE, ISSYSTEM)
    VALUES("ID","ID",1,1,1,1,1);
    -- OPERDATE
    INSERT INTO FIELDS(CODE,FIELDNAME,FIELDTYPE,VISIBLE,ORDERNUM,STATE, ISSYSTEM)
    VALUES("OPERDATE","OPERDATE",3,1,2,1,1);
    -- STATE
    INSERT INTO FIELDS(CODE,FIELDNAME,FIELDTYPE,VISIBLE,ORDERNUM,STATE, ISSYSTEM)
    VALUES("STATE","STATE",1,1,3,1,1);
    -- SOURCE
    INSERT INTO FIELDS(CODE,FIELDNAME,FIELDTYPE,VISIBLE,ORDERNUM,STATE, ISSYSTEM)
    VALUES("SOURCE","SOURCE",1,1,4,1,1);
    
    -- Common    
    INSERT INTO FIELDS(CODE,FIELDNAME,FIELDTYPE,VISIBLE,ORDERNUM,STATE)
    VALUES("ROOMS","Count of rooms",1,1,5,1);

    INSERT INTO FIELDS(CODE,FIELDNAME,FIELDTYPE,VISIBLE,ORDERNUM,STATE)
    VALUES("PHONE","Phone",2,1,6,1);
   
    INSERT INTO FIELDS(CODE,FIELDNAME,FIELDTYPE,VISIBLE,ORDERNUM,STATE)
    VALUES("DESC","Description",2,1,7,1);   

    INSERT INTO FIELDS(CODE,FIELDNAME,FIELDTYPE,VISIBLE,ORDERNUM,STATE)
    VALUES("PRICE","Price",2,1,8,1);
    

    CREATE TABLE SOURCEDATA(
			ID INTEGER NOT NULL PRIMARY KEY,
			POINT TEXT NOT NULL UNIQUE,
			LABEL TEXT NOT NULL UNIQUE,
			CODE  TEXT NOT NULL UNIQUE,
			FILEPATH TEXT, 
			LOGIN TEXT,
			PWD TEXT,
      OPERDATE TIMESTAMP DEFAULT (datetime('now')),
			STATE INTEGER,
			PARSER CLOB,
      FOREIGN KEY( STATE ) REFERENCES STATE(ID)
		);

    INSERT INTO SOURCEDATA(POINT,STATE)
    VALUES("krysha.kz",1);

		CREATE TABLE STOREROW(
			ID INTEGER NOT NULL PRIMARY KEY,
			OPERDATE TIMESTAMP DEFAULT (datetime('now')),
			STATE INTEGER,
			SRCDATA INTEGER,
			FOREIGN KEY( STATE ) REFERENCES STATE(ID),
			FOREIGN KEY( SRCDATA ) REFERENCES SOURCEDATA(ID)
		);
    CREATE TABLE STORETEXT(
			ID INTEGER NOT NULL PRIMARY KEY,
      STOREROW INTEGER,
			FIELD INTEGER,
			VALUE TEXT,
			FOREIGN KEY( STOREROW ) REFERENCES STOREROW(ID),
			FOREIGN KEY( FIELD ) REFERENCES FIELDS(ID)
		);

		CREATE TABLE STORENUM(
			ID INTEGER NOT NULL PRIMARY KEY,
      STOREROW INTEGER,
			FIELD INTEGER,
			VALUE NUMBER,
			FOREIGN KEY( STOREROW ) REFERENCES STOREROW(ID),
			FOREIGN KEY( FIELD ) REFERENCES FIELDS(ID)
		);

		CREATE TABLE STOREDATE(
			ID INTEGER NOT NULL PRIMARY KEY,
      STOREROW INTEGER,
			FIELD INTEGER,
			VALUE TIMESTAMP,
			FOREIGN KEY( STOREROW ) REFERENCES STOREROW(ID),
			FOREIGN KEY( FIELD ) REFERENCES FIELDS(ID)
		);

    CREATE TRIGGER T_STOREROW_CREATE
      AFTER
    INSERT
    ON storerow
    FOR EACH ROW
    BEGIN

      INSERT INTO STORENUM( STOREROW, FIELD, VALUE)
      VALUES( new.ID,1, new.ID );  
    
      INSERT INTO STOREDATE( STOREROW, FIELD, VALUE)
      VALUES( new.ID,2, new.OPERDATE ); 
    
      INSERT INTO STORENUM( STOREROW, FIELD, VALUE)
      VALUES( new.ID,3, new.STATE ); 
    
      INSERT INTO STORENUM( STOREROW, FIELD, VALUE)
      VALUES( new.ID,4, new.SRCDATA ); 
    END;

    INSERT INTO STOREROW(STATE,SRCDATA)
    VALUES(1,1);
    INSERT INTO STOREROW(STATE,SRCDATA)
    VALUES(1,1);


    INSERT INTO STORENUM( STOREROW, FIELD, VALUE)
    VALUES( 1, 5, 2 );

    INSERT INTO STORETEXT( STOREROW, FIELD, VALUE)
    VALUES( 1,6,"7771111111" );

    INSERT INTO STORETEXT( STOREROW, FIELD, VALUE)
    VALUES( 1,7,"No desc" );   

    INSERT INTO STORETEXT( STOREROW, FIELD, VALUE)
    VALUES( 1,8,"0.0" );  

    INSERT INTO STORENUM( STOREROW, FIELD, VALUE)
    VALUES( 2, 5, 1 );

    INSERT INTO STORETEXT( STOREROW, FIELD, VALUE)
    VALUES( 2,6,"7012222222" );

    INSERT INTO STORETEXT( STOREROW, FIELD, VALUE)
    VALUES( 2,7,"Nothing" );  

    INSERT INTO STORETEXT( STOREROW, FIELD, VALUE)
    VALUES( 2,8,"100.0" );  

		CREATE TABLE SCHEDULE( 
    	ID INTEGER NOT NULL PRIMARY KEY,
    	TIMEPLAN TEXT NOT NULL,
    	DAY INTEGER, 
    	TYPE INTEGER 
		);

		INSERT INTO SCHEDULE ( TIMEPLAN, TYPE )
		VALUES( "10:00", 1 );

    CREATE VIEW V_FIELDVALUEBYROW AS	
    SELECT sr.ID,f.Code,sn.Value FROM StoreRow sr, Fields f, StoreNum sn
    WHERE sn.FIELD = f.ID
      AND sr.ID = sn.StoreRow
    UNION	
    SELECT sr.ID,f.Code,st.Value FROM StoreRow sr, Fields f, StoreText st
    WHERE st.FIELD = f.ID
      AND sr.ID = st.StoreRow
    UNION	
    SELECT sr.ID,f.Code,sd.Value FROM StoreRow sr, Fields f, StoreDate sd
    WHERE sd.FIELD = f.ID
      AND sr.ID = sd.StoreRow;

    CREATE VIEW V_FIELDS AS
    SELECT f.ID, f.CODE, f.FIELDNAME 
	  FROM FIELDS f 
	  WHERE f.VISIBLE = 1 
		  AND STATE IN ( 
        SELECT s.ID FROM STATE s 
        WHERE s.CONST != 3 
      )
    ORDER BY f.ORDERNUM;


    CREATE VIEW V_STOREROW AS
    SELECT * FROM STOREROW sr
    WHERE sr.STATE IN (
        SELECT s.ID FROM STATE s
        WHERE s.CONST != 3
      );

    CREATE VIEW V_SOURCE AS
    SELECT sd.ID,sd.POINT,sd.LABEL,sd.CODE,sd.LOGIN,sd.PWD, sd.SOURCE FROM SourceData sd
    WHERE sd.STATE IN (
        SELECT s.ID FROM STATE s
        WHERE s.CONST != 3
      );

    CREATE VIEW V_ROWS AS
    SELECT 
      (SELECT t.VALUE FROM V_FIELDVALUEBYROW t WHERE t.ID = sr.ID AND t.Code = 'ID') AS ID,
      (SELECT t.VALUE FROM V_FIELDVALUEBYROW t WHERE t.ID = sr.ID AND t.Code = 'OPERDATE') AS OPERDATE,
      (SELECT t.VALUE FROM V_FIELDVALUEBYROW t WHERE t.ID = sr.ID AND t.Code = 'STATE') AS STATE,
      (SELECT t.VALUE FROM V_FIELDVALUEBYROW t WHERE t.ID = sr.ID AND t.Code = 'SOURCE') AS SOURCE,
      (SELECT t.VALUE FROM V_FIELDVALUEBYROW t WHERE t.ID = sr.ID AND t.Code = 'ROOMS') AS ROOMS,
      (SELECT t.VALUE FROM V_FIELDVALUEBYROW t WHERE t.ID = sr.ID AND t.Code = 'PHONE') AS PHONE,
      (SELECT t.VALUE FROM V_FIELDVALUEBYROW t WHERE t.ID = sr.ID AND t.Code = 'DESC') AS DESC,
      (SELECT t.VALUE FROM V_FIELDVALUEBYROW t WHERE t.ID = sr.ID AND t.Code = 'PRICE') AS PRICE
    FROM V_STOREROW sr;

    CREATE VIEW V_ROWS_EXT 
    AS
    SELECT 
	    t.ID AS ID,
	    t.OPERDATE AS OPERDATE,
	    st.CODE AS STATE,
      src.POINT AS SOURCE,
	    t.ROOMS AS ROOMS,
	    t.PHONE AS PHONE,
	    t.DESC AS DESC,
	    t.PRICE AS PRICE
    FROM V_ROWS t, State st, V_SOURCE src
    WHERE st.ID = t.STATE
	    AND src.ID = t.SOURCE;

